handle_pollen_severity:
  mode: restart
  alias: Handle Pollen Severity

  fields:
    device:
      name: Device
      required: True
      selector:
        entity:
          filter:
            - domain: "fan"

    severity:
      name: Severity
      required: True
      selector:
        number:
          min: 0
          max: 10

      description: >-
        Configures the air purifier's mode based on pollen severity.
        This is a value between 1-10, and intends to be better than "auto" mode
        for pollen (since the sensor can't detect it).

        If value == 0, the automation will be disabled.

        The air purifier has four fan levels (4 == MAX), and will correspond to
        the severity levels in the following fashion:

           1. Auto mode.
           2. Level 2 for 15 minutes once an hour.
           3. Level 2 for 15 minutes twice an hour.
           4. Level 2.
           5. Level 3 for 15 minutes once an hour.
           6. Level 3 for 15 minutes twice an hour.
           7. Level 3.
           8. Level 4 for 15 minutes once an hour.
           9. Level 4 for 15 minutes twice an hour.
          10. Level 4.


  sequence:
    # Early termination.
    - if:
        - condition: template
          value_template: "{{ severity | int == 0 }}"
      then:
        - stop:

    #
    # Every X:30
    #

    - if:
        - condition: template
          value_template: "{{ now().minute == 30 }}"
      then:
        - if:
            - condition: template
              value_template: "{{ severity | int == 3 }}"
          then:
            - service: script.purify_air
              data:
                device: "{{ device }}"
                strength: 2
                duration:
                  minutes: 15
            - stop:

        - if:
            - condition: template
              value_template: "{{ severity | int == 6 }}"
          then:
            - service: script.purify_air
              data:
                device: "{{ device }}"
                strength: 3
                duration:
                  minutes: 15
            - stop:

        - if:
            - condition: template
              value_template: "{{ severity | int == 9 }}"
          then:
            - service: script.purify_air
              data:
                device: "{{ device }}"
                strength: 4
                duration:
                  minutes: 15
            - stop:

    #
    # Every hour
    #

    - if:
        - condition: template
          value_template: "{{ now().minute == 0 }}"
      then:
        - if:
            - condition: or
              conditions:
                - condition: template
                  value_template: "{{ severity | int == 2 }}"
                - condition: template
                  value_template: "{{ severity | int == 3 }}"

          then:
            - service: script.purify_air
              data:
                device: "{{ device }}"
                strength: 2
                duration:
                  minutes: 15
            - stop:

        - if:
            - condition: or
              conditions:
                - condition: template
                  value_template: "{{ severity | int == 5 }}"
                - condition: template
                  value_template: "{{ severity | int == 6 }}"

          then:
            - service: script.purify_air
              data:
                device: "{{ device }}"
                strength: 3
                duration:
                  minutes: 15
            - stop:

        - if:
            - condition: or
              conditions:
                - condition: template
                  value_template: "{{ severity | int == 8 }}"
                - condition: template
                  value_template: "{{ severity | int == 9 }}"

          then:
            - service: script.purify_air
              data:
                device: "{{ device }}"
                strength: 4
                duration:
                  minutes: 15
            - stop:

    #
    # New permanent states
    #

    - if:
        - condition: template
          value_template: "{{ severity | int == 1 }}"
      then:
        - service: input_number.set_value
          target:
            entity_id: "input_number.levoit_desired_speed"
          data:
            value: 0

    - if:
        - condition: or
          conditions:
            - condition: template
              value_template: "{{ severity | int == 2 }}"
            - condition: template
              value_template: "{{ severity | int == 3 }}"
      then:
        - service: input_number.set_value
          target:
            entity_id: "input_number.levoit_desired_speed"
          data:
            value: 1

    - if:
        - condition: and
          conditions:
            - condition: template
              value_template: "{{ severity | int >= 4 }}"
            - condition: template
              value_template: "{{ severity | int <= 6 }}"
      then:
        - service: input_number.set_value
          target:
            entity_id: "input_number.levoit_desired_speed"
          data:
            value: 2

    - if:
        - condition: and
          conditions:
            - condition: template
              value_template: "{{ severity | int >= 7 }}"
            - condition: template
              value_template: "{{ severity | int <= 9 }}"
      then:
        - service: input_number.set_value
          target:
            entity_id: "input_number.levoit_desired_speed"
          data:
            value: 3

    - if:
        - condition: template
          value_template: "{{ severity | int == 10 }}"
      then:
        - service: input_number.set_value
          target:
            entity_id: "input_number.levoit_desired_speed"
          data:
            value: 4

    # NOTE: If there's an active timer, just wait for it to end before
    # setting this new strength. Otherwise, trigger the timer explicitly
    # to enact this new desired speed.
    - if:
        - condition: state
          entity_id: "timer.levoit"
          state: "idle"
      then:
        - service: timer.start
          target:
            entity_id: "timer.levoit"
          data:
            # NOTE: duration = 0 would use the default duration.
            duration: 1

